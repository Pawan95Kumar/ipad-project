{"ast":null,"code":"var _jsxFileName = \"A:\\\\computer science\\\\Frontend\\\\react\\\\apple ipod\\\\ipod-app\\\\src\\\\components\\\\Navbar.jsx\";\nimport React from 'react';\nimport \"../css/Navbar.css\";\nimport BatImg from \"../static/battery.png\";\n\n//todo: Renders navbar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Navbar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      time: this.getCurrentTime()\n    };\n    this.stateId = \"\";\n  }\n\n  //todo: if there is no notification then iPod logo, time and battery icon\n  //todo: If there is a notification show it for 1 second and clear it\n  componentDidMount() {\n    const {\n      noty\n    } = this.props;\n    if (noty === true) {\n      return;\n    }\n    //todo: set an interval of 60 seconds to update time\n    this.stateId = setInterval(() => {\n      this.setState({\n        time: this.getCurrentTime()\n      });\n    }, 60000);\n  }\n  componentDidUpdate() {\n    const {\n      setNoty,\n      noty\n    } = this.props;\n    if (noty === true) {\n      setTimeout(function () {\n        setNoty();\n      }, 1000);\n    }\n  }\n\n  //todo: Clear the update time interval\n  componentWillUnmount() {\n    const {\n      noty\n    } = this.props;\n    if (noty !== true) clearInterval(this.stateId);\n  }\n\n  //todo: fir getting current time in string\n  getCurrentTime() {\n    const today = new Date();\n    var time = today.getHours() + \":\" + today.getMinutes();\n    if (today.getMinutes() < 10) {\n      time = today.getHours() + \":0\" + today.getMinutes();\n    }\n    return time;\n  }\n\n  //todo: Render navbar to show either ipod logo, time or Notification\n  render() {\n    const {\n      time\n    } = this.state;\n    const {\n      playing,\n      noty,\n      notifyText\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"heading\",\n        children: [\"iPod \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-wifi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this), noty === true && /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"notification\",\n        children: notifyText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 35\n      }, this), noty === false && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"time\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-container-nav\",\n        children: [playing ? /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"play-pause-nav\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"play-pause-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 133\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 102\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"battery\",\n          src: BatImg,\n          alt: \"Battery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Navbar;","map":{"version":3,"names":["React","BatImg","jsxDEV","_jsxDEV","Navbar","Component","constructor","state","time","getCurrentTime","stateId","componentDidMount","noty","props","setInterval","setState","componentDidUpdate","setNoty","setTimeout","componentWillUnmount","clearInterval","today","Date","getHours","getMinutes","render","playing","notifyText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt"],"sources":["A:/computer science/Frontend/react/apple ipod/ipod-app/src/components/Navbar.jsx"],"sourcesContent":["import React from 'react';\r\nimport \"../css/Navbar.css\"\r\nimport BatImg from \"../static/battery.png\"\r\n\r\n//todo: Renders navbar\r\nclass Navbar extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            time: this.getCurrentTime(),\r\n        }\r\n        this.stateId = \"\";\r\n    }\r\n\r\n    //todo: if there is no notification then iPod logo, time and battery icon\r\n    //todo: If there is a notification show it for 1 second and clear it\r\n    componentDidMount() {\r\n        const { noty} = this.props;\r\n        if (noty === true) {\r\n            return;\r\n        }\r\n        //todo: set an interval of 60 seconds to update time\r\n        this.stateId = setInterval(() => {\r\n            this.setState({ time: this.getCurrentTime() });\r\n        }, 60000);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const {setNoty, noty } = this.props;\r\n        if(noty===true){\r\n            setTimeout(function () {\r\n                setNoty();\r\n            },1000)\r\n        }\r\n    }\r\n\r\n    //todo: Clear the update time interval\r\n    componentWillUnmount() {\r\n        const { noty } = this.props;\r\n        if (noty !== true)\r\n            clearInterval(this.stateId);\r\n    }\r\n\r\n    //todo: fir getting current time in string\r\n    getCurrentTime() {\r\n        const today = new Date();\r\n        var time = today.getHours() + \":\" + today.getMinutes();\r\n        if (today.getMinutes() < 10) {\r\n            time = today.getHours() + \":0\" + today.getMinutes();\r\n        }\r\n        return time;\r\n    }\r\n\r\n    //todo: Render navbar to show either ipod logo, time or Notification\r\n    render() {\r\n        const { time } = this.state;\r\n        const { playing, noty , notifyText} = this.props;\r\n        return (\r\n            <div className=\"bar\">\r\n                { <h5 className=\"heading\">iPod <i className=\"fas fa-wifi\"></i></h5>}\r\n                {noty === true && <h5 className=\"notification\">{notifyText}</h5>}\r\n                {noty === false && <h3 className=\"time\">{time}</h3>}\r\n                {<div className=\"right-container-nav\">\r\n                    {playing ? <h5 className=\"play-pause-nav\"><i className=\"fas fa-play\"></i></h5> : <h5 className=\"play-pause-nav\"><i className=\"fas fa-pause\"></i> </h5>}\r\n                    <img className=\"battery\" src={BatImg} alt=\"Battery\" />\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}